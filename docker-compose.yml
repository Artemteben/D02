services:
  db:
    image: postgres:16
    restart: on-failure
    env_file:
      - .env
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "-c", "pg_isready -U $POSTGRES_USER" ]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:latest
    volumes:
      - redis_data:/data
    restart: on-failure
    environment:
      - REDIS_HOST==redis://redis:6379/3
    env_file:
      - .env
    expose:
      - "6379"

  courses_app:
    build: .
    command: bash -c "python manage.py collectstatic --noinput && gunicorn config.wsgi:application --bind 0.0.0.0:8000"

    volumes:
      - .:/courses_app
      - static_volume:/courses_app/static
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
    depends_on:
      - courses_app

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    volumes:
      - .:/courses_app
    depends_on:
      - DRF3
      - redis
      - app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/
    env_file:
      - .env

  celery-beat:
    build: .
    tty: true
    command: celery -A config beat -l INFO
    volumes:
      - .:/courses_app
    depends_on:
      - db
      - redis
      - courses_app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/
    env_file:
      - .env

volumes:
  postgres_data:
  static_volume:
  redis_data: